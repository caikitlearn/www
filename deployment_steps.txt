Some instructions because I forget every time.

Step 1: launch EC2 instance
- latest ubuntu

Step 2: security groups
- edit inbound rules
- ssh, http, flask (5000), https, custom

Step 3: elastic IPs
- allocate new address
- associate address

Step 4: route 53
- create hosted zone
- do it for padtai.ca and www.padtai.ca
- add elastic IP here
- update nameservers

Step 5: ssh into EC2
- install conda (optional)
- git clone code for site

Step 6: certbot https://certbot.eff.org/
sudo apt-get update
sudo apt-get install software-properties-common
sudo add-apt-repository universe
sudo add-apt-repository ppa:certbot/certbot
sudo apt-get update
sudo apt-get install python-certbot-nginx
sudo certbot --nginx
sudo certbot renew --dry-run
# check grade at https://www.ssllabs.com/ssltest/analyze.html?d=padtai.ca
# go to https://padtai.ca to see nginx welcome message
# check redirects are working (from http:// and www)
# check http://padtai.ca:5000 works

Step 7: configure nginx part 1

sudo rm /etc/nginx/sites-enabled/default
sudo touch /etc/nginx/sites-available/application
sudo ln -s /etc/nginx/sites-available/application /etc/nginx/sites-enabled/application

sudo vim /etc/nginx/sites-enabled/application

server {
    location / {
        proxy_pass http://localhost:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }
    location /static {
        alias /home/ubuntu/www/www/static;
    }
}

sudo /etc/init.d/nginx restart

Step 8: configure nginx part 2

cd /etc/nginx/conf.d
sudo touch server.conf
sudo vim server.conf

server {
    listen 80;
    listen [::]:80;
    server_name padtai.ca www.padtai.ca;
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2 default_server;
    listen [::]:443 ssl http2 default_server;
    server_name padtai.ca www.padtai.ca;

    location / {
        proxy_pass http://localhost:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    location /static {
        alias /home/ubuntu/www/www/static;
    }

    ssl_certificate /etc/letsencrypt/live/padtai.ca/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/padtai.ca/privkey.pem;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers EECDH+CHACHA20:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5;

    ssl_session_cache shared:SSL:5m;
    ssl_session_timeout 1h;
    add_header Strict-Transport-Security “max-age=15768000” always;
}

sudo nginx -s reload

Step 9: gunicorn
gunicorn www:app -D
